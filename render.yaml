# render.yaml
services:
  - type: redis
    name: redis-cache
    plan: free
    image: redis:6.2-alpine
    env: []
  
  - type: web_service
    name: auth-service
    env:
      - key: REDIS_URL
        value: redis://redis-cache:6379/0
      - key: AUTH_DATABASE_URI
        value: sqlite:///auth.db
      - key: JWT_SECRET_KEY
        value: some_really_secure_key_32_chars
    dockerfilePath: ./auth_service/Dockerfile
    exec: python app.py
    plan: free
    dependsOn:
      - redis-cache

  - type: web_service
    name: user-service
    env:
      - key: REDIS_URL
        value: redis://redis-cache:6379/0
      - key: USER_DATABASE_URI
        value: sqlite:///user.db
    dockerfilePath: ./user_service/Dockerfile
    exec: python app.py
    plan: free
    dependsOn:
      - redis-cache
      - auth-service

  - type: web_service
    name: certificate-service
    env:
      - key: REDIS_URL
        value: redis://redis-cache:6379/0
      - key: CERT_DATABASE_URI
        value: sqlite:///certs.db
      - key: JWT_SECRET_KEY
        value: some_really_secure_key_32_chars
    dockerfilePath: ./certificate_service/Dockerfile
    exec: python app.py
    plan: free
    dependsOn:
      - redis-cache
      - auth-service
      - user-service

  - type: background_worker
    name: notification-service
    env:
      - key: SMTP_HOST
        value: smtp.gmail.com
      - key: SMTP_PORT
        value: "587"
      - key: SMTP_USER
        value: sypyx1@gmail.com
      - key: SMTP_PASS
        value: paad slgb prer aoac
      - key: CERT_SERVICE_URL
        value: http://certificate-service.onrender.com
      - key: USER_SERVICE_URL
        value: http://user-service.onrender.com
      - key: JWT_SECRET_KEY
        value: some_really_secure_key_32_chars
      - key: CELERY_BROKER_URL
        value: redis://redis-cache:6379/0
      - key: CELERY_RESULT_BACKEND
        value: redis://redis-cache:6379/0
      - key: SMS_RU_API_KEY
        value: E4533D59-5983-8CAB-B496-279F04274AAF
    dockerfilePath: ./notification_service/Dockerfile
    exec: sh -c "python app.py & celery -A celery_app.celery worker --loglevel=info"
    plan: free
    dependsOn:
      - redis-cache
      - certificate-service
      - user-service

  - type: web_service
    name: frontend
    env: []
    dockerfilePath: ./frontend/Dockerfile
    exec: npm start
    plan: free
    dependsOn:
      - auth-service
      - user-service
      - certificate-service
      - notification-service
